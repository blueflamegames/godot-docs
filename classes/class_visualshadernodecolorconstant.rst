:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisualShaderNodeColorConstant.xml.

.. _class_VisualShaderNodeColorConstant:

VisualShaderNodeColorConstant
=============================

**Inherits:** :ref:`VisualShaderNodeConstant<class_VisualShaderNodeConstant>` **<** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

A :ref:`Color<class_Color>` constant to be used within the visual shader graph.

Description
-----------

Has two output ports representing RGB and alpha channels of :ref:`Color<class_Color>`.

Translated to ``vec3 rgb`` and ``float alpha`` in the shader language.

Properties
----------

+---------------------------+------------------------------------------------------------------------+-----------------------+
| :ref:`Color<class_Color>` | :ref:`constant<class_VisualShaderNodeColorConstant_property_constant>` | ``Color(1, 1, 1, 1)`` |
+---------------------------+------------------------------------------------------------------------+-----------------------+

Property Descriptions
---------------------

.. _class_VisualShaderNodeColorConstant_property_constant:

- :ref:`Color<class_Color>` **constant**

+-----------+-----------------------+
| *Default* | ``Color(1, 1, 1, 1)`` |
+-----------+-----------------------+
| *Setter*  | set_constant(value)   |
+-----------+-----------------------+
| *Getter*  | get_constant()        |
+-----------+-----------------------+

A :ref:`Color<class_Color>` constant which represents a state of this node.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
