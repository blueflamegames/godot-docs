:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorSpinSlider.xml.

.. _class_EditorSpinSlider:

EditorSpinSlider
================

**Inherits:** :ref:`Range<class_Range>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Godot editor's control for editing numeric values.

Description
-----------

This :ref:`Control<class_Control>` node is used in the editor's Inspector dock to allow editing of numeric values. Can be used with :ref:`EditorInspectorPlugin<class_EditorInspectorPlugin>` to recreate the same behavior.

Properties
----------

+-----------------------------+-----------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`flat<class_EditorSpinSlider_property_flat>`               | ``false`` |
+-----------------------------+-----------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`hide_slider<class_EditorSpinSlider_property_hide_slider>` | ``false`` |
+-----------------------------+-----------------------------------------------------------------+-----------+
| :ref:`String<class_String>` | :ref:`label<class_EditorSpinSlider_property_label>`             | ``""``    |
+-----------------------------+-----------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`read_only<class_EditorSpinSlider_property_read_only>`     | ``false`` |
+-----------------------------+-----------------------------------------------------------------+-----------+
| :ref:`String<class_String>` | :ref:`suffix<class_EditorSpinSlider_property_suffix>`           | ``""``    |
+-----------------------------+-----------------------------------------------------------------+-----------+

Property Descriptions
---------------------

.. _class_EditorSpinSlider_property_flat:

- :ref:`bool<class_bool>` **flat**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flat(value) |
+-----------+-----------------+
| *Getter*  | is_flat()       |
+-----------+-----------------+

----

.. _class_EditorSpinSlider_property_hide_slider:

- :ref:`bool<class_bool>` **hide_slider**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_hide_slider(value) |
+-----------+------------------------+
| *Getter*  | is_hiding_slider()     |
+-----------+------------------------+

If ``true``, the slider is hidden.

----

.. _class_EditorSpinSlider_property_label:

- :ref:`String<class_String>` **label**

+-----------+------------------+
| *Default* | ``""``           |
+-----------+------------------+
| *Setter*  | set_label(value) |
+-----------+------------------+
| *Getter*  | get_label()      |
+-----------+------------------+

----

.. _class_EditorSpinSlider_property_read_only:

- :ref:`bool<class_bool>` **read_only**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_read_only(value) |
+-----------+----------------------+
| *Getter*  | is_read_only()       |
+-----------+----------------------+

----

.. _class_EditorSpinSlider_property_suffix:

- :ref:`String<class_String>` **suffix**

+-----------+-------------------+
| *Default* | ``""``            |
+-----------+-------------------+
| *Setter*  | set_suffix(value) |
+-----------+-------------------+
| *Getter*  | get_suffix()      |
+-----------+-------------------+

The suffix to display after the value (in a faded color). This should generally be a plural word. You may have to use an abbreviation if the suffix is too long to be displayed.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
