:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioEffectPanner.xml.

.. _class_AudioEffectPanner:

AudioEffectPanner
=================

**Inherits:** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Adds a panner audio effect to an audio bus. Pans sound left or right.

Description
-----------

Determines how much of an audio signal is sent to the left and right buses.

Tutorials
---------

- :doc:`Audio buses <../tutorials/audio/audio_buses>`

Properties
----------

+---------------------------+--------------------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`pan<class_AudioEffectPanner_property_pan>` | ``0.0`` |
+---------------------------+--------------------------------------------------+---------+

Property Descriptions
---------------------

.. _class_AudioEffectPanner_property_pan:

- :ref:`float<class_float>` **pan**

+-----------+----------------+
| *Default* | ``0.0``        |
+-----------+----------------+
| *Setter*  | set_pan(value) |
+-----------+----------------+
| *Getter*  | get_pan()      |
+-----------+----------------+

Pan position. Value can range from -1 (fully left) to 1 (fully right).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
