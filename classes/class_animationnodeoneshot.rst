:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AnimationNodeOneShot.xml.

.. _class_AnimationNodeOneShot:

AnimationNodeOneShot
====================

**Inherits:** :ref:`AnimationNodeSync<class_AnimationNodeSync>` **<** :ref:`AnimationNode<class_AnimationNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Plays an animation once in :ref:`AnimationNodeBlendTree<class_AnimationNodeBlendTree>`.

Description
-----------

A resource to add to an :ref:`AnimationNodeBlendTree<class_AnimationNodeBlendTree>`. This node will execute a sub-animation and return once it finishes. Blend times for fading in and out can be customized, as well as filters.

Tutorials
---------

- :doc:`AnimationTree <../tutorials/animation/animation_tree>`

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

Properties
----------

+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                           | :ref:`autorestart<class_AnimationNodeOneShot_property_autorestart>`                           | ``false`` |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                         | :ref:`autorestart_delay<class_AnimationNodeOneShot_property_autorestart_delay>`               | ``1.0``   |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                         | :ref:`autorestart_random_delay<class_AnimationNodeOneShot_property_autorestart_random_delay>` | ``0.0``   |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                         | :ref:`fadein_time<class_AnimationNodeOneShot_property_fadein_time>`                           | ``0.0``   |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                         | :ref:`fadeout_time<class_AnimationNodeOneShot_property_fadeout_time>`                         | ``0.0``   |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+
| :ref:`MixMode<enum_AnimationNodeOneShot_MixMode>` | :ref:`mix_mode<class_AnimationNodeOneShot_property_mix_mode>`                                 | ``0``     |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------+-----------+

Enumerations
------------

.. _enum_AnimationNodeOneShot_MixMode:

.. _class_AnimationNodeOneShot_constant_MIX_MODE_BLEND:

.. _class_AnimationNodeOneShot_constant_MIX_MODE_ADD:

enum **MixMode**:

- **MIX_MODE_BLEND** = **0**

- **MIX_MODE_ADD** = **1**

Property Descriptions
---------------------

.. _class_AnimationNodeOneShot_property_autorestart:

- :ref:`bool<class_bool>` **autorestart**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_autorestart(value) |
+-----------+------------------------+
| *Getter*  | has_autorestart()      |
+-----------+------------------------+

If ``true``, the sub-animation will restart automatically after finishing.

----

.. _class_AnimationNodeOneShot_property_autorestart_delay:

- :ref:`float<class_float>` **autorestart_delay**

+-----------+------------------------------+
| *Default* | ``1.0``                      |
+-----------+------------------------------+
| *Setter*  | set_autorestart_delay(value) |
+-----------+------------------------------+
| *Getter*  | get_autorestart_delay()      |
+-----------+------------------------------+

The delay after which the automatic restart is triggered, in seconds.

----

.. _class_AnimationNodeOneShot_property_autorestart_random_delay:

- :ref:`float<class_float>` **autorestart_random_delay**

+-----------+-------------------------------------+
| *Default* | ``0.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_autorestart_random_delay(value) |
+-----------+-------------------------------------+
| *Getter*  | get_autorestart_random_delay()      |
+-----------+-------------------------------------+

If :ref:`autorestart<class_AnimationNodeOneShot_property_autorestart>` is ``true``, a random additional delay (in seconds) between 0 and this value will be added to :ref:`autorestart_delay<class_AnimationNodeOneShot_property_autorestart_delay>`.

----

.. _class_AnimationNodeOneShot_property_fadein_time:

- :ref:`float<class_float>` **fadein_time**

+-----------+------------------------+
| *Default* | ``0.0``                |
+-----------+------------------------+
| *Setter*  | set_fadein_time(value) |
+-----------+------------------------+
| *Getter*  | get_fadein_time()      |
+-----------+------------------------+

----

.. _class_AnimationNodeOneShot_property_fadeout_time:

- :ref:`float<class_float>` **fadeout_time**

+-----------+-------------------------+
| *Default* | ``0.0``                 |
+-----------+-------------------------+
| *Setter*  | set_fadeout_time(value) |
+-----------+-------------------------+
| *Getter*  | get_fadeout_time()      |
+-----------+-------------------------+

----

.. _class_AnimationNodeOneShot_property_mix_mode:

- :ref:`MixMode<enum_AnimationNodeOneShot_MixMode>` **mix_mode**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_mix_mode(value) |
+-----------+---------------------+
| *Getter*  | get_mix_mode()      |
+-----------+---------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
